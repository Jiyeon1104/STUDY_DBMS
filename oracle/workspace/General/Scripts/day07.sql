--SCOTT 계정에 있는 테이블 중에서 SALGRADE를 복사한 후 GRADE 컬럼명을 LEVEL로 변경
--값을 반대로 바꾸기
CREATE TABLE COPY_SALGRADE 
AS SELECT * FROM SCOTT.SALGRADE;

SELECT * FROM COPY_SALGRADE;
ALTER TABLE COPY_SALGRADE RENAME COLUMN GRADE TO "LEVEL";

/*
 * 1 -> 5
 * 2 -> 4
 * 3 -> 3
 * 4 -> 2
 * 5 -> 1
 */

UPDATE COPY_SALGRADE
SET "LEVEL" = 6 - "LEVEL";

SELECT * FROM COPY_SALGRADE;

-- HR 계정의 DEPT 테이블을 새로 만든 계정으로 복사, 복사한 테이블에서 LOC별 평균 급여 검색
SELECT * FROM HR.DEPT;
SELECT * FROM HR.EMP;

CREATE TABLE SALARY_OF_LOCATION AS
SELECT LOC, ROUND(AVG(E.SAL), 2) AS AVG_SAL 
FROM HR.DEPT D JOIN HR.EMP E
ON D.DEPTNO = E.DEPTNO
GROUP BY LOC;

SELECT * FROM SALARY_OF_LOCATION;

-- VIEW
-- PLAYER테이블에 나이 컬럼 추가한 뷰 만들기
CREATE VIEW PLAYER_AGE
AS SELECT CEIL((SYSDATE - BIRTH_DATE) / 365) AGE, PLAYER.* FROM PLAYER;

SELECT * FROM PLAYER_AGE;

--EMPLOYEES 테이블에서 사원 이름과 그 사원의 매니저 이름이 있는 VIEW 만들기
--FIRST_NAME과 LAST_NAME은 CONCATENATION을 사용하여 연결해준다.
SELECT * FROM EMPLOYEES;

SELECT 
E1.EMPLOYEE_ID  "EMP_ID", E1.FIRST_NAME || ' ' || E1.LAST_NAME "EMP_NAME",
E2.EMPLOYEE_ID  "MGR_ID", E2.FIRST_NAME || ' ' || E2.LAST_NAME "MGR_NAME"
FROM EMPLOYEES E1 JOIN EMPLOYEES E2
ON E1.MANAGER_ID = E2.EMPLOYEE_ID;

--사원은 전부 나오게 한다.
--NULL일 경우 '없음'으로 대체
--매니저의 핸드폰 번호 추가하여 출력
--매니저가 없는 사원은 사원의 핸드폰 번호로 출력
DROP VIEW COPY_EMPLOYEES;

CREATE VIEW COPY_EMPLOYEES AS
SELECT 
	EMPLOYEE_ID, FIRST_NAME || ' ' || LAST_NAME "EMP_NAME", EMAIL,
	PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID
FROM EMPLOYEES;

SELECT * FROM COPY_EMPLOYEES;

CREATE VIEW EMPLOYEES_AND_MANAGERS AS
SELECT 
E1.EMPLOYEE_ID  "EMP_ID", E1.EMP_NAME,
CASE WHEN E2.EMPLOYEE_ID IS NULL THEN '없음' ELSE TO_CHAR(E2.EMPLOYEE_ID) END "MGR_ID", 
NVL(E2.EMP_NAME, '없음') "MGR_NAME",
NVL(E2.PHONE_NUMBER, E1.PHONE_NUMBER) "PHONE_NUMBER"
FROM COPY_EMPLOYEES E1 LEFT OUTER JOIN COPY_EMPLOYEES E2
ON E1.MANAGER_ID = E2.EMPLOYEE_ID;

SELECT * FROM EMPLOYEES_AND_MANAGERS;

-- PLAYER 테이블에 TEAM_NAME 컬럼을 추가한 VIEW 만들기
CREATE VIEW PLAYER_TEAM_NAME AS
SELECT TEAM_NAME, P.* FROM PLAYER P JOIN TEAM T
ON P.TEAM_ID = T.TEAM_ID;

SELECT * FROM PLAYER_TEAM_NAME;

--EMPLOYEES 테이블에서 사원들 중 매니저들은 그 JOB_ID를 검색한다.
--매니저가 아닌 사원의 정보도 모두 나와야 한다.
--사원의 정보들 중 FIRST_NAME, JOB_ID만 조회한다.
SELECT E1.FIRST_NAME, E2.JOB_ID 
FROM EMPLOYEES E1 LEFT OUTER JOIN (SELECT JOB_ID, MANAGER_ID FROM EMPLOYEES) E2
ON E1.EMPLOYEE_ID = E2.MANAGER_ID;

CREATE VIEW MANAGER AS
SELECT EMPLOYEE_ID, JOB_ID
FROM EMPLOYEES E1 JOIN 
(SELECT MANAGER_ID FROM EMPLOYEES WHERE MANAGER_ID IS NOT NULL GROUP BY MANAGER_ID) E2
ON E1.EMPLOYEE_ID = E2.MANAGER_ID;

CREATE VIEW EMPLOYEES_JOB_ID AS
SELECT E.FIRST_NAME, M.JOB_ID 
FROM EMPLOYEES E 
LEFT OUTER JOIN MANAGER M
ON E.EMPLOYEE_ID = M.EMPLOYEE_ID;

--VIEW로 만든 후 매니저가 아니면서 FIRST_NAME이 A로 시작하는 사원을 검색한다.
SELECT * FROM EMPLOYEES_JOB_ID
WHERE JOB_ID IS NULL AND FIRST_NAME LIKE 'A%';






