IDE 설치 - DBeaver
	https://dbeaver.io/download/
	windows 64bit(zip) - 무설치 버전 설치
	압축 해제 후 DBeaver.exe 실행
	Sample Database는 만들지 않는다.

New Connection
	host(서버의 IP주소) : localhost
	Database : XE
	username : hr
	password : hr

Edit Driver Settings
	Libraries 탭 클릭
	> 기존에 있는 라이브러리 전체 삭제
	> Add File
	> C:\oraclexe\app\oracle\product\11.2.0\server\jdbc\lib\ojdbc6.jar 추가
	> 확인

Test Connection 클릭 > Connected 성공
-----------------------------------------------------------------------------------------------
DBMS의 소통 방식

-----------------------------------------
		사용자
-----------------------------------------
	↕	   ↕		↕
고객 관리 응용프로그램	   ↕	주문 관리 응용프로그램
	↕	   ↕		↕
-----------------------------------------
		DBMS
-----------------------------------------

RDBMS(관계형 데이터베이스 시스템)
	테이블끼리 서로 관계를 맺는다.

Table A(userInformation, info, member)	Table B(orderDetails, deliveryInfo, order)

번호(PK)	이름	나이	아이디(UK)	주문번호		번호(FK)	날짜		상품수량
1	한동석	20	hds1234		20211223001	2	2021-12-23	목도리, 3
2	심창환	21	sch1234		20211222003	2	2021-12-22	가방, 1
3	정찬렬	22	jcy1234		20211222002	3	2021-12-22	코트, 2
4	이성우	23	lsw1234		20211221001	4	2021-12-21	정장, 2
5	공도윤	24	gdy1234		20211222001	5	2021-12-22	까르띠에 팔찌, 1

이러한 구조를 가지는 것을 Table, Relation(오라클), Class라고 부른다.

COLUMN(열, 속성, 필드)
	공통된 값들의 주제

ROW(행, 레코드, 튜플)
	하나의 정보

PRIMARY KEY(PK)
	고유한 값.
	각 행의 구분점으로 사용된다.
	중복이 없고 NULL값을 허용하지 않는다.
	*NULL : 아직 어떤 값을 넣을 지 모르겠다는 의미로 넣는 값.

FOREIGN KEY(FK)
	다른 테이블의 PK를 의미한다.
	보통 테이블끼리 관계를 맺을 때 사용한다.
	중복이 가능하다.

UNIQUE KEY(UK)
	NULL은 허용하지만 중복을 허용하지 않는다.
-------------------------------------------------------------------------------------------------
컴파일 언어와 스크립트 언어
- 컴파일 언어
	파일 단위로 해석한다(일괄처리)
	수정이 거의 없을 때 효율적이다.

- 스크립트 언어
	한 줄 단위로 해석한다(개별처리)
	빈번한 수정 시 효율적이다.

SQL문(쿼리문) - DDL, DML, DCL, TCL
	스크립트 언어.
	데이터베이스와 소통하는 언어.

- DDL(Data Definition Language) : 데이터 정의어
	테이블 조작, 제어 관련 쿼리문

	1. CREATE : 테이블 생성
		CREATE TABLE [테이블명]( [컬럼명] [자료형(용량)] [제약조건], ... );

	2. DROP : 테이블 삭제
		DROP TABLE [테이블명]

	3. ALTER : 테이블 수정
		- 테이블명 수정 : RENAME TO [새로운 테이블명]
		- 컬럼 추가 : ADD([새로운 컬럼명] [자료형(용량)])
		- 컬럼명 변경 : RENAME COLUMN [기존 컬럼명] TO [새로운 컬럼명]
		- 컬럼 삭제 : DROP COLUMN [기존 컬럼명]
		- 컬럼 수정 : MODIFY([기존 컬럼명] [자료형(용량)])

	4. TRUNCATE : 테이블 내용 전체 삭제
		TRUNCATE TABLE [테이블명]

자료형(TYPE) : 용량은 항상 넉넉하게 주도록 한다.

	숫자
		NUMBER(precision) : 정수
		NUMBER(precision, 소수점 자리수) : 실수

	문자열
		CHAR(용량) : 고정형
			CHAR(4)에 'A'를 넣으면 A^^^ 빈 자리가 공백으로 채워진다.
			형식을 정한 날짜, 주민등록번호처럼 글자 수가 절대 변하지 않는 값는 넣는다.

		VARCHAR(용량), VARCHAR2(용량) : 가변형
			값의 길이 만큼 공간이 배정된다. 글자 수에 변화가 있는 값는 넣는다.

	날짜
		DATE : FORMAT에 맞춰서 날짜를 저장하는 타입
-------------------------------------------------------------------------
무결성
	데이터의 정확성, 일관성, 유효성이 유지되는 것.

	정확성 : 데이터는 애매하지 않아야 한다.
	일관성 : 각 사용자가 일관된 데이터를 볼 수 있도록 해야한다.
	유효성 : 데이터가 실제 존재하는 데이터여야 한다.

1. 개체 무결성
	모든 테이블이 PK로 선택된 컬럼을 가져야 한다.

2. 참조 무결성
	두 테이블의 데이터가 항상 일관된 값을 가지도록 유지하는 것.

3. 도메인 무결성
	컬럼의 타입, NULL값의 허용 등에 대한 사항을 정의하고
	올바른 데이터가 입력되었는 지를 확인하는 것.
-------------------------------------------------------------------------------------
모델링(기획)
	추상적인 주제를 db에 맞게 설계하는 것

1. 요구사항 분석
	회원, 주문, 상품 : 3가지를 관리하고자 한다.

2. 개념적 설계(개념 모델링)
	회원	주문	상품
	--------------------
	아이디	주문번호	상품번호
	--------------------
	비밀번호	주문날짜	상품명
	이름	아이디	가격
	주소	상품번호	재고량
	이메일
	생일

3. 논리적 설계(논리 모델링)
	회원	주문	상품
	--------------------
	아이디P	주문번호P	상품번호P
	--------------------
	비밀번호	주문날짜	상품명
	이름	아이디F	가격
	주소	상품번호F	재고량
	이메일U
	생일

4. 물리적 설계(물리 모델링)
	USER
	-----------------------
	userId : VARCHAR2(1000)
	-----------------------
	userPw : VARCHAR2(1000)
	userAddress : VARCHAR2(2000)
	userEmail : VARCHAR2(2000) : UNIQUE
	userBirth : DATE

	ORDER

	PRODUCT

5. 구현
-------------------------------------------------------------------------------
1. 요구사항 분석
	꽃 테이블과 화분 테이블 2개가 필요하고,
	꽃을 구매할 때 화분도 같이 구매합니다.
	꽃은 이름과 색상, 가격이 있고,
	화분은 제품번호, 색상, 모양이 있습니다.
	화분은 모든 꽃을 담을 수 없고 맞는 꽃들을 담아야 합니다.

2. 개념적 설계
	꽃	화분
	이름	제품번호
	색상	색상
	가격	모양
		이름

3. 논리적 설계

	꽃	화분
	--------------------
	이름P	제품번호P
	--------------------
	색상	색상
	가격	모양
		이름F

4. 물리적 설계
	FLOWER
	--------------------
	NAME : VARCHAR2(1000)
	--------------------
	COLOR : VARCHAR2(500)
	PRICE : NUMBER(10)


	POT
	--------------------
	NUM : NUMBER
	--------------------
	COLOR : VARCHAR2(500)
	SHAPE : VARCHAR2(1000)
	NAME : VARCHAR2(1000) : FK

5. 구현
-------------------------------------------------------------------------------
1. 요구사항 분석
	-펫
	펫의 종류, 이름, 나이, 병명

	-주인
	이름, 나이, 주소, 핸드폰 번호

2. 개념적 설계
3. 논리적 설계
4. 물리적 설계
5. 구현





















